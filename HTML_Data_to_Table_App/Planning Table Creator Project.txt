Project 1 - HTML Table Creator

Class html_table
Table object - html_table_obj
* has column names (1D array) - col_names[]
  -separate from table data so that it is human readable
  -must stay in sync with the next property below
* has table data (2D array) - col_data[][]
  -keeps in sync with column names
  -keeps values to go into table cells
* has an associative array that allows names in the col_names array to be different than the keys used in col_data-useful when Db's are implemented - col_name_map[]
* has HTML/CSS ID column names (headers) - this_ths_id
* has HTML/CSS class name for column names (headers) - css_th_class
* has HTML/CSS ID for the table - table_id
* has HTML/CSS class name for the table - css_table_class
* has HTML/CSS ID for each cell - this_tds_id
* has HTML/CSS class name for cells - css_td_class

* does a match of database columns to the table columns - get_and_match_cols(), order_cols()
* does a read of data from a Database - get_and_match_cols(), order_cols()
* does a creation of a new n column table - (constructor)
* does an add of a column that has a name - add_col()
* does an insert of rows that match the columns - add_row(), add_cell()
* does a display to human interface of the table - show_table()

Procedure:
1a. User is prompted for data
  a. a table is presented to the user
  b. user fills out the table (adding rows etc)
  c. details about the table are pulled in
  d. values are pulled in
1b. OR Database is connected to
  a. Database is queried
  b. Results are returned
  c. Results are identified by DB column name and saved
7. Order of columns/names is determined and saved
8. Rows are inserted into col_data by column name
9. Table and all its HTML are displayed.
